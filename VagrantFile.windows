# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "cocoamap_2014_04_08"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  # config.vm.box_url = "http://domain.com/path/to/above.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :forwarded_port, guest: 8083, host: 8083 #Development Server
  config.vm.network :forwarded_port, guest: 8081, host: 8081 #App Server
  config.vm.network :forwarded_port, guest: 5432, host: 5432 #PostgreSQL
  config.vm.network :forwarded_port, guest: 9225, host: 9200 #Elasticsearch Proxy Server

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # this is set to false because we will use ssh key in package instead for windows.
  config.ssh.forward_agent = false

  config.vm.provision "docker" 

#  Vagrant.configure("2") do |config|
#  config.vm.provision "shell",
#      inline: "cd synced/irmis.git && make run"
#  end
# 


  # Provider-specific configuration so you can fine-tune various
  config.vm.provider :virtualbox do |vb|
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, 
                  "--memory", "2048",
                  "--cpus", 2,
                  "--name", "CocoaMap"]
  end
end
